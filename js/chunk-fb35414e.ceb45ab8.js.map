{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.math.sign.js","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../../src/components/VSparkline/helpers/core.ts","webpack:///../../../../src/components/VSparkline/helpers/math.ts","webpack:///../../../../src/components/VSparkline/helpers/path.ts","webpack:///../../../src/components/VSparkline/VSparkline.ts","webpack:///../../../src/components/VChipGroup/VChipGroup.ts"],"names":["$","sign","target","stat","bias","c","x","Math","clientWidth","selectedElement","offsetLeft","rtl","widths","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","BaseSlideGroup","name","directives","Resize","Touch","props","activeClass","type","default","centerActive","nextIcon","prevIcon","showArrows","Boolean","validator","v","data","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","content","wrapper","computed","canTouch","window","__cachedNext","this","genTransition","__cachedPrev","classes","hasAffixes","isMobile","hasNext","hasPrev","watch","internalValue","scroll","val","beforeUpdate","$children","updated","methods","onScroll","onFocusin","vm","calculateUpdatedOffset","$vuetify","genNext","slot","$scopedSlots","next","$slots","$createElement","staticClass","class","on","click","key","genContent","ref","focusin","genData","value","onResize","genIcon","icon","location","upperLocation","hasAffix","disabled","genPrev","prev","genWrapper","start","e","move","end","calculateNewOffset","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","document","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","scrollTo","setWidths","render","h","provide","slideGroup","maxY","totalValues","values","maxValue","minValue","gridX","maxX","gridY","minX","index","y","horizonY","height","parseInt","p0","p2","p1","vector","to","from","unitVector","radius","fill","points","isCollinear","checkCollinear","point","threshold","getDistance","isTooCloseForRadius","radiusForPoint","before","moveTo","after","mixins","inheritAttrs","autoDraw","autoDrawDuration","autoDrawEasing","autoLineWidth","color","gradient","gradientDirection","includes","String","labels","labelSize","Number","lineWidth","padding","showLabels","smooth","width","lastLength","parsedPadding","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","_lineWidth","totalPadding","parseFloat","boundary","minY","hasLabels","parsedLabels","len","i","item","normalizedValues","map","_values","genPoints","textY","_radius","immediate","handler","path","genGradient","stops","attrs","offset","id","gradientUnits","x1","y1","x2","y2","genG","style","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","_uid","genLabels","children","genLabel","label","genBars","bars","offsetX","display","viewBox","genClipPath","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","chipGroup","column"],"mappings":"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","file":"js/chunk-fb35414e.ceb45ab8.js","sourcesContent":["var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.es/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      const scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y: maxY - (value - minValue) * gridY,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            gradientUnits: 'userSpaceOnUse',\n            x1: gradientDirection === 'left' ? '100%' : '0',\n            y1: gradientDirection === 'top' ? '100%' : '0',\n            x2: gradientDirection === 'right' ? '100%' : '0',\n            y2: gradientDirection === 'bottom' ? '100%' : '0',\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n"],"sourceRoot":""}