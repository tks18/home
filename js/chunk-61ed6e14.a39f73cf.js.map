{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/axios-jsonp/lib/index.js","webpack:///../../../../src/components/VSparkline/helpers/core.ts","webpack:///../../../../src/components/VSparkline/helpers/math.ts","webpack:///../../../../src/components/VSparkline/helpers/path.ts","webpack:///../../../src/components/VSparkline/VSparkline.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VChipGroup/VChipGroup.ts"],"names":["$","$entries","entries","target","stat","O","cid","buildParams","params","result","i","push","encodeURIComponent","join","module","exports","config","Promise","resolve","reject","script","document","createElement","src","url","indexOf","remove","onload","onreadystatechange","onerror","parentNode","removeChild","async","jsonp","old","window","isAbort","responseData","response","data","status","additionalParams","_","Date","getTime","callbackParamName","readyState","test","Error","cancelToken","promise","then","cancel","head","appendChild","maxY","totalValues","values","maxValue","Math","minValue","gridX","maxX","gridY","x","minX","index","y","value","horizonY","height","parseInt","p0","p2","p1","vector","to","from","length","unitVector","radius","fill","start","points","end","next","prev","isCollinear","checkCollinear","point","threshold","getDistance","isTooCloseForRadius","radiusForPoint","before","moveTo","after","mixins","name","inheritAttrs","props","autoDraw","autoDrawDuration","type","default","autoDrawEasing","autoLineWidth","color","gradient","gradientDirection","validator","val","includes","String","labels","labelSize","Number","lineWidth","padding","showLabels","smooth","Boolean","width","lastLength","computed","parsedPadding","this","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","totalWidth","_lineWidth","totalPadding","parseFloat","boundary","minY","hasLabels","$scopedSlots","parsedLabels","len","item","normalizedValues","map","_values","genPoints","textY","_radius","watch","immediate","handler","path","methods","genGradient","stops","attrs","offset","$createElement","id","x1","y1","x2","y2","genG","style","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","_uid","ref","genLabels","children","genLabel","label","genBars","bars","offsetX","display","viewBox","genClipPath","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","render","BaseSlideGroup","directives","Resize","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","v","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","classes","hasAffixes","isMobile","hasNext","hasPrev","internalValue","beforeUpdate","$children","updated","genNext","slot","$slots","staticClass","class","on","click","key","genContent","genData","onResize","genIcon","icon","$vuetify","rtl","location","upperLocation","hasAffix","VIcon","disabled","genPrev","genWrapper","e","move","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","h","provide","slideGroup","chipGroup","column"],"mappings":"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","file":"js/chunk-61ed6e14.a39f73cf.js","sourcesContent":["var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var cid = 1;\n\nfunction buildParams(params) {\n    var result = [];\n\n    for (var i in params) {\n        result.push(encodeURIComponent(i) + '=' + encodeURIComponent(params[i]));\n    }\n\n    return result.join('&');\n}\n\nmodule.exports = function jsonpAdapter(config) {\n    return new Promise(function(resolve, reject) {\n        var script = document.createElement('script');\n        var src = config.url;\n\n        if (config.params) {\n            var params = buildParams(config.params);\n\n            if (params) {\n                src += (src.indexOf('?') >= 0 ? '&' : '?') + params;\n            }\n        }\n\n        script.async = true;\n\n        function remove() {\n            if (script) {\n                script.onload = script.onreadystatechange = script.onerror = null;\n\n                if (script.parentNode) {\n                    script.parentNode.removeChild(script);\n                }\n\n                script = null;\n            }\n        }\n\n        var jsonp = 'axiosJsonpCallback' + cid++;\n        var old = window[jsonp];\n        var isAbort = false;\n\n        window[jsonp] = function(responseData) {\n            window[jsonp] = old;\n\n            if (isAbort) {\n                return;\n            }\n            \n            var response = {\n                data: responseData,\n                status: 200\n            }\n\n            resolve(response);\n        };\n\n        var additionalParams = {\n            _: (new Date().getTime())\n        };\n        \n        additionalParams[config.callbackParamName || 'callback'] = jsonp;\n\n        src += (src.indexOf('?') >= 0 ? '&' : '?') + buildParams(additionalParams);\n\n        script.onload = script.onreadystatechange = function() {\n            if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n                remove();\n            }\n        };\n\n        script.onerror = function() {\n            remove();\n\n            reject(new Error('Network Error'));\n        };\n\n        if (config.cancelToken) {\n            config.cancelToken.promise.then(function(cancel) {\n                if (!script) {\n                    return;\n                }\n\n                isAbort = true;\n\n                reject(cancel);\n            });\n        }        \n\n        script.src = src;\n\n        document.head.appendChild(script);\n    });\n};","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalValues - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            x1: +(gradientDirection === 'left'),\n            y1: +(gradientDirection === 'top'),\n            x2: +(gradientDirection === 'right'),\n            y2: +(gradientDirection === 'bottom'),\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          this.isOverflowing\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          this.isOverflowing\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n"],"sourceRoot":""}