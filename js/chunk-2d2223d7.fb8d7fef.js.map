{"version":3,"sources":["webpack:///../../../src/components/VHover/VHover.ts"],"names":["name","props","disabled","type","default","value","undefined","methods","onMouseEnter","this","onMouseLeave","render","$scopedSlots","element","hover","isActive","Array","mouseenter","mouseleave"],"mappings":"gHAAA,oDAWe,sBAAO,EAAD,KAEnB,QAFa,OAIN,CACPA,KADO,UAGPC,MAAO,CACLC,SAAU,CACRC,KADQ,QAERC,SAAS,GAEXC,MAAO,CACLF,KADK,QAELC,aAASE,IAIbC,QAAS,CACPC,aADO,WAELC,KAAA,kBAEFC,aAJO,WAKLD,KAAA,oBAIJE,OAvBO,WAwBL,OAAKF,KAAKG,aAAN,cAAJ,IAAkCH,KAAKJ,OASnCI,KAAKG,aAAT,UACEC,EAAUJ,KAAKG,aAAaR,QAAQ,CAAEU,MAAOL,KAAKM,YAGhDC,MAAA,YAAJ,IAA8BH,EAAA,SAC5BA,EAAUA,EAAV,IAGGA,IAAWG,MAAA,QAAZ,IAAuCH,EAA3C,KAMKJ,KAAL,WACEI,EAAA,KAAeA,EAAA,MAAf,GACAJ,KAAA,GAAQI,EAAR,KAAsB,CACpBI,WAAYR,KADQ,aAEpBS,WAAYT,KAAKC,gBAIrB,IAbE,eAAY,+CAAZ,MAEA,KAnBA,eAAY,yDAAZ,MAEA,MAGF","file":"js/chunk-2d2223d7.fb8d7fef.js","sourcesContent":["// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\nexport default mixins(\n  Delayable,\n  Toggleable\n  /* @vue/component */\n).extend({\n  name: 'v-hover',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  methods: {\n    onMouseEnter () {\n      this.runDelay('open')\n    },\n    onMouseLeave () {\n      this.runDelay('close')\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({ hover: this.isActive })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this)\n\n      return element as any\n    }\n\n    if (!this.disabled) {\n      element.data = element.data || {}\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave,\n      })\n    }\n\n    return element\n  },\n})\n"],"sourceRoot":""}