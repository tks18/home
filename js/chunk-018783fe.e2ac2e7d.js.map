{"version":3,"sources":["webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///./src/plugins/helpers.js","webpack:///../../../src/components/VChip/VChip.ts"],"names":["name","props","boilerplate","loading","tile","transition","type","types","default","computed","attrs","this","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","$createElement","staticClass","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","render","h","class","style","undefined","scrollTo","element","scrollPixels","duration","scrollPos","scrollLeft","clientWidth","scrollWidth","startTime","window","performance","now","Date","getTime","scroll","timestamp","timeElapsed","progress","Math","min","requestAnimationFrame","countUpFromTime","countFrom","timeDifference","secondsInAHour","secondsInADay","secondsInAWeek","secondsInAYear","years","floor","weeks","days","hours","mins","secs","returnVals","minutes","seconds","active","activeClass","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","click","genFilter","left","genClose","right","size","e","genContent","$slots","tabindex","setBackgroundColor","color","setTextColor"],"mappings":"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","file":"js/chunk-018783fe.e2ac2e7d.js","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import moment from 'vue-moment';\n\nexport function scrollTo(element, scrollPixels, duration) {\n  const scrollPos = element.scrollLeft;\n  if (\n    !(\n      (scrollPos === 0 || scrollPixels > 0) &&\n      (element.clientWidth + scrollPos === element.scrollWidth ||\n        scrollPixels < 0)\n    )\n  ) {\n    const startTime =\n      'now' in window.performance ? performance.now() : new Date().getTime();\n\n    const scroll = (timestamp) => {\n      const timeElapsed = timestamp - startTime;\n      const progress = Math.min(timeElapsed / duration, 1);\n      element.scrollLeft = scrollPos + scrollPixels * progress;\n      if (timeElapsed < duration) {\n        window.requestAnimationFrame(scroll);\n      } else {\n        return;\n      }\n    };\n    window.requestAnimationFrame(scroll);\n  }\n}\n\nexport function countUpFromTime(countFrom) {\n  countFrom = new Date(countFrom).getTime();\n  var now = new Date(),\n    countFrom = new Date(countFrom),\n    timeDifference = now - countFrom;\n\n  var secondsInAHour = 60 * 60 * 1000;\n  var secondsInADay = secondsInAHour * 24;\n  var secondsInAWeek = secondsInADay * 7;\n  var secondsInAYear = secondsInADay * 365;\n\n  let years = Math.floor((timeDifference / secondsInAYear) * 1);\n  let weeks = Math.floor(\n    ((timeDifference % secondsInAYear) / secondsInAWeek) * 1,\n  );\n  let days = Math.floor(\n    ((timeDifference % secondsInAWeek) / secondsInADay) * 1,\n  );\n  let hours = Math.floor(\n    ((timeDifference % secondsInADay) / secondsInAHour) * 1,\n  );\n  let mins = Math.floor(\n    (((timeDifference % secondsInADay) % secondsInAHour) / (60 * 1000)) * 1,\n  );\n  let secs = Math.floor(\n    ((((timeDifference % secondsInADay) % secondsInAHour) % (60 * 1000)) /\n      1000) *\n      1,\n  );\n\n  let returnVals = {\n    years: years,\n    weeks: weeks,\n    days: days,\n    hours: hours,\n    minutes: mins,\n    seconds: secs,\n  };\n\n  return returnVals;\n}\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n"],"sourceRoot":""}