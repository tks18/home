{"version":3,"sources":["webpack:///../../../src/mixins/transitionable/index.ts","webpack:///../../../src/components/VAlert/VAlert.ts","webpack:///./node_modules/core-js/modules/es.math.sign.js","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VItemGroup/VItem.ts","webpack:///../../../src/components/VSlideGroup/VSlideItem.ts","webpack:///../../../src/components/VHover/VHover.ts"],"names":["name","props","mode","origin","transition","String","mixins","border","type","validator","closeLabel","default","coloredBorder","dense","dismissible","closeIcon","icon","Boolean","val","outlined","prominent","text","value","computed","__cachedBorder","this","data","staticClass","class","setBackgroundColor","$createElement","__cachedDismissible","color","VBtn","small","attrs","$vuetify","lang","t","on","click","VIcon","__cachedIcon","iconColor","classes","VSheet","computedColor","computedIcon","includes","hasColoredIcon","hasText","isDark","created","$attrs","hasOwnProperty","methods","genWrapper","children","$slots","prepend","$scopedSlots","close","toggle","genContent","genAlert","role","style","directives","isActive","setColor","render","h","$","sign","target","stat","bias","c","x","Math","clientWidth","selectedElement","offsetLeft","rtl","widths","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","BaseSlideGroup","Resize","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","v","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","content","wrapper","canTouch","window","__cachedNext","genTransition","__cachedPrev","hasAffixes","isMobile","hasNext","hasPrev","watch","internalValue","scroll","beforeUpdate","$children","updated","onScroll","onFocusin","vm","calculateUpdatedOffset","genNext","slot","next","key","ref","focusin","genData","onResize","genIcon","location","upperLocation","hasAffix","disabled","genPrev","prev","start","e","move","end","calculateNewOffset","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","document","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","scrollTo","setWidths","provide","slideGroup","BaseItem","required","element","active","Array","_b","console","undefined","onMouseEnter","onMouseLeave","hover","mouseenter","mouseleave"],"mappings":"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","file":"js/chunk-5a63c8a8.746910fb.js","sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'transitionable',\n\n  props: {\n    mode: String,\n    origin: String,\n    transition: String,\n  },\n})\n","// Styles\nimport './VAlert.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNodeData } from 'vue'\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable,\n  Transitionable\n).extend({\n  name: 'v-alert',\n\n  props: {\n    border: {\n      type: String,\n      validator (val: string) {\n        return [\n          'top',\n          'right',\n          'bottom',\n          'left',\n        ].includes(val)\n      },\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$cancel',\n    },\n    icon: {\n      default: '',\n      type: [Boolean, String],\n      validator (val: boolean | string) {\n        return typeof val === 'string' || val === false\n      },\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n      validator (val: string) {\n        return [\n          'info',\n          'error',\n          'success',\n          'warning',\n        ].includes(val)\n      },\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    __cachedBorder (): VNode | null {\n      if (!this.border) return null\n\n      let data: VNodeData = {\n        staticClass: 'v-alert__border',\n        class: {\n          [`v-alert__border--${this.border}`]: true,\n        },\n      }\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data)\n        data.class['v-alert__border--has-color'] = true\n      }\n\n      return this.$createElement('div', data)\n    },\n    __cachedDismissible (): VNode | null {\n      if (!this.dismissible) return null\n\n      const color = this.iconColor\n\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color,\n          icon: true,\n          small: true,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: () => (this.isActive = false),\n        },\n      }, [\n        this.$createElement(VIcon, {\n          props: { color },\n        }, this.closeIcon),\n      ])\n    },\n    __cachedIcon (): VNode | null {\n      if (!this.computedIcon) return null\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: { color: this.iconColor },\n      }, this.computedIcon)\n    },\n    classes (): object {\n      const classes: Record<string, boolean> = {\n        ...VSheet.options.computed.classes.call(this),\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text,\n      }\n\n      if (this.border) {\n        classes[`v-alert--border-${this.border}`] = true\n      }\n\n      return classes\n    },\n    computedColor (): string {\n      return this.color || this.type\n    },\n    computedIcon (): string | boolean {\n      if (this.icon === false) return false\n      if (typeof this.icon === 'string' && this.icon) return this.icon\n      if (!['error', 'info', 'success', 'warning'].includes(this.type)) return false\n\n      return `$${this.type}`\n    },\n    hasColoredIcon (): boolean {\n      return (\n        this.hasText ||\n        (Boolean(this.border) && this.coloredBorder)\n      )\n    },\n    hasText (): boolean {\n      return this.text || this.outlined\n    },\n    iconColor (): string | undefined {\n      return this.hasColoredIcon ? this.computedColor : undefined\n    },\n    isDark (): boolean {\n      if (\n        this.type &&\n        !this.coloredBorder &&\n        !this.outlined\n      ) return true\n\n      return Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this)\n    }\n  },\n\n  methods: {\n    genWrapper (): VNode {\n      const children = [\n        this.$slots.prepend || this.__cachedIcon,\n        this.genContent(),\n        this.__cachedBorder,\n        this.$slots.append,\n        this.$scopedSlots.close\n          ? this.$scopedSlots.close({ toggle: this.toggle })\n          : this.__cachedDismissible,\n      ]\n\n      const data: VNodeData = {\n        staticClass: 'v-alert__wrapper',\n      }\n\n      return this.$createElement('div', data, children)\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content',\n      }, this.$slots.default)\n    },\n    genAlert (): VNode {\n      let data: VNodeData = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert',\n        },\n        on: this.listeners$,\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }\n\n      if (!this.coloredBorder) {\n        const setColor = this.hasText ? this.setTextColor : this.setBackgroundColor\n        data = setColor(this.computedColor, data)\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()])\n    },\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (h): VNode {\n    const render = this.genAlert()\n\n    if (!this.transition) return render\n\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode,\n      },\n    }, [render])\n  },\n})\n","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.es/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      const scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\n/* @vue/component */\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false,\n    },\n  },\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  methods: {\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = this._b(element.data || {}, element.tag!, {\n      class: { [this.activeClass]: this.isActive },\n    })\n\n    return element\n  },\n})\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n).extend({\n  name: 'v-item',\n})\n","// Extensions\nimport { BaseItem } from '../VItemGroup/VItem'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('slideGroup')\n  /* @vue/component */\n).extend({\n  name: 'v-slide-item',\n})\n","// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\nexport default mixins(\n  Delayable,\n  Toggleable\n  /* @vue/component */\n).extend({\n  name: 'v-hover',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  methods: {\n    onMouseEnter () {\n      this.runDelay('open')\n    },\n    onMouseLeave () {\n      this.runDelay('close')\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({ hover: this.isActive })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this)\n\n      return element as any\n    }\n\n    if (!this.disabled) {\n      element.data = element.data || {}\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave,\n      })\n    }\n\n    return element\n  },\n})\n"],"sourceRoot":""}