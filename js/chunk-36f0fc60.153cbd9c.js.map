{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../src/util/dom.ts","webpack:///../../../src/components/VTextField/VTextField.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["module","exports","Object","is","x","y","$","target","stat","name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","mixins","functional","type","Number","default","max","String","parseInt","content","isGreater","class","ctx","window","mounted","onObserve","destroyed","length","options","callback","console","node","root","composed","baseMixins","onVisible","dirtyTypes","directives","resize","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","genAppendSlot","slot","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","genCounter","dark","light","$scopedSlots","$createElement","genControl","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","lazyValue","id","keydown","onKeyDown","ref","modifiers","quiet","onResize","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","$nextTick","onClick","onFocus","attachedRoot","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","document","updateValue","autoGrow","noResize","rowHeight","validator","v","isNaN","parseFloat","rows","noResizeHandle","calculateInputHeight","height","minHeight"],"mappings":"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","file":"js/chunk-36f0fc60.153cbd9c.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n\n    this.autofocus && this.tryAutofocus()\n\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}