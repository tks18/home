{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["module","exports","Object","is","x","y","$","target","stat","name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","mixins","functional","type","Number","default","max","String","parseInt","content","isGreater","class","ctx","isIntersecting","mounted","onObserve","destroyed","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","resize","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","persistentPlaceholder","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","window","clearableCallback","$refs","genAppendSlot","slot","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","$createElement","genCounter","dark","light","genControl","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","undefined","genInput","listeners","inputAttrs","lazyValue","id","keydown","onKeyDown","ref","modifiers","quiet","onResize","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","$nextTick","onClick","onFocus","root","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","document","updateValue","autoGrow","noResize","rowHeight","validator","v","isNaN","parseFloat","rows","noResizeHandle","calculateInputHeight","height","minHeight"],"mappings":"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","file":"js/chunk-36f0fc60.dbf48294.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n    this.autofocus && this.tryAutofocus()\n    requestAnimationFrame(() => {\n      this.isBooted = true\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize()\n        }\n      })\n    })\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    autoGrow (val: boolean) {\n      this.$nextTick(() => {\n        val\n          ? this.calculateInputHeight()\n          : this.$refs.input?.style.removeProperty('height')\n      })\n    },\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}