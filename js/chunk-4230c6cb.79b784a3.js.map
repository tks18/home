{"version":3,"sources":["webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VChipGroup/VChipGroup.ts"],"names":["name","props","active","type","default","activeClass","this","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","staticClass","left","genClose","right","size","on","e","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","BaseSlideGroup","mixins","directives","Resize","Touch","centerActive","nextIcon","prevIcon","showArrows","validator","v","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","hasAffixes","isMobile","hasNext","Math","hasPrev","watch","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","next","class","key","ref","genData","onResize","genIcon","icon","$vuetify","rtl","location","upperLocation","hasAffix","VIcon","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","window","provide","slideGroup","column"],"mappings":"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","file":"js/chunk-4230c6cb.79b784a3.js","sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          this.isOverflowing\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          this.isOverflowing\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n"],"sourceRoot":""}